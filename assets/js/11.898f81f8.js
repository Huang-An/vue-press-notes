(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{516:function(e,a,t){e.exports=t.p+"assets/img/img-01-01.534dd84d.jpg"},517:function(e,a,t){e.exports=t.p+"assets/img/img-01-02.fb1e6772.jpg"},540:function(e,a,t){"use strict";t.r(a);var s=t(6),o=Object(s.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("现有个 webpack.config.js 如下：")]),e._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[e._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  mode"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'development'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  entry"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'./src/index.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  module"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    rules"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        test"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[e._v("\\.js$")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        use"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'babel-loader'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("p",[e._v("执行命令")]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[e._v("webpack --config webpack.config.js\n")])])]),s("h3",{attrs:{id:"执行命令过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行命令过程"}},[e._v("#")]),e._v(" 执行命令过程")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("通过 shell 运行的脚本，通常会寻找模块的 package 中的 bin 字段作为程序启动的入口。")])]),e._v(" "),s("li",[s("p",[e._v("如果非通过 npx 或 package scripts 运行，会寻找 npm global 安装的 webpack，默认可在 "),s("code",[e._v("C:\\Users\\xx\\AppData\\Roaming\\npm\\node_modules\\webpack")]),e._v(" 中找到。")])]),e._v(" "),s("li",[s("p",[e._v("而通过 npx 或 package scripts 运行, 则会寻找当前目录下的 node_modules 的 webpack。")])]),e._v(" "),s("li",[s("p",[e._v("执行命令后，运行 "),s("code",[e._v("webpack/bin/webpack.js")]),e._v("。")])])]),e._v(" "),s("p",[s("code",[e._v("webpack/bin/webpack.js")]),e._v(" 中会调用 cli，对终端传入的参数进行解析。")]),e._v(" "),s("p",[e._v("可以适用 "),s("code",[e._v("webpack-cli")]),e._v(" 或者 "),s("code",[e._v("webpack-command")]),e._v("。只会寻找其中一个进行执行。如果两个都安装了，会抛出警告，并停止后续的执行。")]),e._v(" "),s("p",[e._v("在这其中判断是否安装了 "),s("code",[e._v("webpack-cli")]),e._v(" 或者 "),s("code",[e._v("webpack-command")]),e._v("，是通过调用 require.resolve 查询某个模块文件的带有完整绝对路径的文件名。如果捕获到异常就是没有安装。")]),e._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[e._v("isInstalled")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("packageName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=>")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("try")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    require"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("packageName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("catch")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("p",[e._v("如果都没有安装，则会通过 readLine 在终端中询问是否安装 "),s("code",[e._v("webpack-cli")]),e._v("，如果允许，则通过 "),s("code",[e._v("runCommand")]),e._v(" 安装 "),s("code",[e._v("webpack-cli")])]),e._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[e._v("最终通过 require "),s("code",[e._v("webpack-cli")]),e._v(" 或者 "),s("code",[e._v("webpack-command")]),e._v("， 调用 cli。")])]),e._v(" "),s("h3",{attrs:{id:"webpack-cli"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack-cli"}},[e._v("#")]),e._v(" webpack-cli")]),e._v(" "),s("p",[s("code",[e._v("webpack-cli")]),e._v(" 的程序入口是 "),s("code",[e._v("webpack-cli/bin/cli")]),e._v("，其入口是一个立即执行函数，会在被 "),s("code",[e._v("webpack")]),e._v(" require 后，立即执行。")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("调用 "),s("code",[e._v("import-local")]),e._v(" 判断本地环境是否安装了 "),s("code",[e._v("webpack-cli")]),e._v("，如果是，则优先使用本地环境的 "),s("code",[e._v("webpack-cli")]),e._v("。")])]),e._v(" "),s("li",[s("p",[e._v("引入 "),s("code",[e._v("v8-compile-cache")]),e._v(" 进行编译缓存。")])]),e._v(" "),s("li",[s("p",[e._v("通过 "),s("code",[e._v("yargs")]),e._v(" 对终端 shell 参数进行解析。")])]),e._v(" "),s("li",[s("p",[e._v("在 "),s("code",[e._v('require("./utils/convert-argv")')]),e._v(" 中，处理终端参数，请求 "),s("code",[e._v("webpack.config.js")]),e._v("，并合并两者的选项参数。")])]),e._v(" "),s("li",[s("p",[e._v("处理完参数之后，引入 "),s("code",[e._v("webpack")]),e._v(", 这里的 webpack 是运行主入口文件，即 package 中的 main 字段："),s("code",[e._v("webpack/lib/webpack.js")]),e._v("。 传入参数，并执行。")])])]),e._v(" "),s("p",[e._v("同时在 webpack 方法返回的 compiler 对象上，通过 "),s("code",[e._v("hooks.watchRun.tap")]),e._v(" 和 "),s("code",[e._v("hooks.beforeRun.tap")]),e._v(" 订阅事件，等待触发时，打印一些信息。")]),e._v(" "),s("ol",{attrs:{start:"6"}},[s("li",[e._v("调用 compiler 对象中的 run 方法开始执行本次编译。在 compiler.close 之后，执行编译结束的回调，在回调中，如果需要生成 stats，即生成。")])]),e._v(" "),s("h3",{attrs:{id:"webpack-lib-webpack-js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack-lib-webpack-js"}},[e._v("#")]),e._v(" webpack/lib/webpack.js")]),e._v(" "),s("p",[e._v("在 "),s("code",[e._v("webpack-cli")]),e._v(" 中执行了 "),s("code",[e._v("webpack")]),e._v(" 方法并传入选项之后。"),s("code",[e._v("webpack/lib/webpack.js")]),e._v(" 会调用 "),s("code",[e._v("validateSchema")]),e._v(" 方法对选项参数进行校验。然后通过 new Compiler() 创建一个编译对象。（这里如果参数选项是一个数组，会创建多个 compiler）。")]),e._v(" "),s("p",[s("img",{attrs:{src:t(516),alt:"img-01-01"}})]),e._v(" "),s("ol",[s("li",[s("p",[e._v("在创建完 "),s("code",[e._v("compiler")]),e._v(" 之后，会挂载 "),s("code",[e._v("NodeEnvironmentPlugin")]),e._v("，这个插件主要是封装一些读取文件，生成文件，监听文件的一些方法，大部分都是 node 文件系统的一些 api。")])]),e._v(" "),s("li",[s("p",[e._v("执行在选项中配置的 plugins，诸如 "),s("code",[e._v("webpack-html-plugin")]),e._v("。")])])]),e._v(" "),s("p",[s("img",{attrs:{src:t(517),alt:"img-01-02"}})]),e._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[e._v("之后，会根据选项配置，挂载一些内置的 "),s("code",[e._v("plugin")]),e._v("，诸如 "),s("code",[e._v("ExternalsPlugin")]),e._v("、"),s("code",[e._v("CommonJsPlugin")])])]),e._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[e._v("compiler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("options "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("WebpackOptionsApply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("process")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" compiler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[e._v("从第二点来看，webpack 中的插件，通常是一个类，拥有一个 "),s("code",[e._v("apply")]),e._v(" 方法，该方法接受 "),s("code",[e._v("compiler")]),e._v(" 对象作为参数。也可以是一个函数，在调用时会将通过 call 方法，将上下文指向 "),s("code",[e._v("compiler")]),e._v("，并接受 "),s("code",[e._v("compiler")]),e._v(" 对象作为参数。在插件中通过向 hooks 中订阅事件，等待在编译过程中被触发。")])]),s("ol",{attrs:{start:"4"}},[s("li",[e._v("最终 "),s("code",[e._v("webpack")]),e._v(" 执行完，返回 "),s("code",[e._v("compiler")]),e._v(" 对象。")])]),e._v(" "),s("h3",{attrs:{id:"compiler-类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#compiler-类"}},[e._v("#")]),e._v(" Compiler 类")]),e._v(" "),s("p",[e._v("接上面，"),s("code",[e._v("webpack-cli")]),e._v(" 中会调用 "),s("code",[e._v("compiler")]),e._v(" 对象中的 "),s("code",[e._v("run")]),e._v(" 方法开始执行本次编译。"),s("code",[e._v("compiler")]),e._v(" 实例通过 "),s("code",[e._v("new Compiler")]),e._v(" 得来。观察 "),s("code",[e._v("Compiler")]),e._v(" 类，该类继承 "),s("code",[e._v("Tapable")]),e._v(" 类。")]),e._v(" "),s("p",[s("code",[e._v("Tapable")]),e._v(" 是一个类似于 EventEmitter 的一个发布/订阅事件的库。"),s("code",[e._v("webpack")]),e._v(" 通过在其上面订阅事件，并在编译过程中的不同阶段被调用触发。")]),e._v(" "),s("p",[e._v("不了解 "),s("code",[e._v("tapable")]),e._v(" 的，可以先查阅文档：")]),e._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"https://babel.docschina.org/docs/en/plugins/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tapable"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://webpack.js.org/api/compiler-hooks/",target:"_blank",rel:"noopener noreferrer"}},[e._v("webpack compiler hooks"),s("OutboundLink")],1)])]),e._v(" "),s("p",[e._v("跳过 "),s("code",[e._v("new Compiler")]),e._v(" 时构造方法中繁杂的变量声明。我们看 "),s("code",[e._v("compiler")]),e._v(" 被执行的 "),s("code",[e._v("run")]),e._v(" 方法中做了些什么。")]),e._v(" "),s("ol",[s("li",[s("p",[s("code",[e._v("this.running")]),e._v(" 在构造方法中被赋值为 "),s("code",[e._v("false")]),e._v("。表示编译器是否正在运行。如果已经启动，就退出编译。避免重复运行。")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("onCompiled")]),e._v(" 是在编译成功之后的执行的回调。")])]),e._v(" "),s("li",[s("p",[e._v("触发钩子 "),s("code",[e._v("hooks.beforeRun")]),e._v("，这个钩子在运行之前被执行。可以搜索 "),s("code",[e._v("hooks.beforeRun.tap")]),e._v(" 看这个钩子在内部订阅了那些事件。")])]),e._v(" "),s("li",[s("p",[e._v("触发钩子 "),s("code",[e._v("hooks.run")]),e._v("，这个钩子在运行时被执行。可以搜索 "),s("code",[e._v("hooks.run.tap")]),e._v(" 看这个钩子在内部订阅了那些事件。")])]),e._v(" "),s("li",[s("p",[e._v("在执行相应钩子，读取记录之后，调用 "),s("code",[e._v("this.compile")]),e._v("，并传入回调 "),s("code",[e._v("onCompiled")]),e._v("。")])])]),e._v(" "),s("p",[e._v("接下来看 "),s("code",[e._v("this.compile")]),e._v(" 方法中做了些什么。")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("调用 "),s("code",[e._v("newCompilationParams")]),e._v(" 方法，返回 "),s("code",[e._v("newCompilation")]),e._v(" 需要的参数。参数对象中包含 "),s("code",[e._v("normalModuleFactory")]),e._v(" 、"),s("code",[e._v("contextModuleFactory")]),e._v("、"),s("code",[e._v("compilationDependencies")]),e._v("。后面在用到时，我们会见解。")])]),e._v(" "),s("li",[s("p",[e._v("触发 "),s("code",[e._v("hooks.beforeCompile")]),e._v(" 、 "),s("code",[e._v("hooks.compile")]),e._v(" 钩子之后。调用 "),s("code",[e._v("newCompilation")]),e._v(" 生成一个 "),s("code",[e._v("compilation")]),e._v(" 对象。")])]),e._v(" "),s("li",[s("p",[e._v("触发 "),s("code",[e._v("hooks.make")]),e._v(" 钩子。")])])])])}),[],!1,null,null,null);a.default=o.exports}}]);